{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\user\\\\khalil-weather\\\\realtime-weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _templateObject8,\n    _templateObject9,\n    _templateObject10,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\khalil-weather\\\\realtime-weather-app\\\\src\\\\WeatherCard.js\";\n\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport WeatherIcon from './WeatherIcon.js';\nimport { ReactComponent as AirFlowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/loading.svg\";\nimport { ReactComponent as CogIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/cog.svg\";\nvar WeatherCardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n  min-width: 360px;\\n  box-shadow: \", \";\\n  background-color: \", \";\\n  box-sizing: border-box;\\n  padding: 30px 15px;\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.boxShadow;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.foregroundColor;\n});\nvar Location = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-size: 28px;\\n  color: \", \";\\n  margin-bottom: 20px;\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.titleColor;\n});\nvar Description = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  color: \", \";\\n  margin-bottom: 30px;\\n\"])), function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.textColor;\n});\nvar CurrentWeather = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 30px;\\n\"])));\nvar Temperature = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  font-size: 96px;\\n  font-weight: 300;\\n  display: flex;\\n\"])), function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.temperatureColor;\n});\nvar Celsius = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  font-weight: normal;\\n  font-size: 42px;\\n\"])));\nvar AirFlow = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  font-size: 16x;\\n  font-weight: 300;\\n  color: \", \";\\n  margin-bottom: 20px;\\n\\n  svg {\\n    width: 25px;\\n    height: auto;\\n    margin-right: 30px;\\n  }\\n\"])), function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.textColor;\n});\nvar Rain = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  font-size: 16x;\\n  font-weight: 300;\\n  color: \", \";\\n\\n  svg {\\n    width: 25px;\\n    height: auto;\\n    margin-right: 30px;\\n  }\\n\"])), function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.textColor;\n});\nvar Refresh = styled.div(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  right: 15px;\\n  bottom: 15px;\\n  font-size: 12px;\\n  display: inline-flex;\\n  align-items: flex-end;\\n  color: \", \";\\n\\n  svg {\\n    margin-left: 10px;\\n    width: 15px;\\n    height: 15px;\\n    cursor: pointer;\\n    animation: rotate infinite 1.5s linear;\\n    animation-duration: \", \";\\n  }\\n\\n  @keyframes rotate {\\n    from {\\n      transform: rotate(360deg);\\n    }\\n    to {\\n      transform: rotate(0deg);\\n    }\\n  }\\n\"])), function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.textColor;\n}, function (_ref9) {\n  var isLoading = _ref9.isLoading;\n  return isLoading ? '1.5s' : '0s';\n});\nvar Cog = styled(CogIcon)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 30px;\\n  right: 15px;\\n  width: 15px;\\n  height: 15px;\\n  cursor: pointer;\\n\"])));\n\nvar WeatherCard = function WeatherCard(props) {\n  var weatherElement = props.weatherElement,\n      moment = props.moment,\n      fetchData = props.fetchData,\n      setCurrentPage = props.setCurrentPage,\n      cityName = props.cityName;\n  var observationTime = weatherElement.observationTime,\n      temperature = weatherElement.temperature,\n      windSpeed = weatherElement.windSpeed,\n      description = weatherElement.description,\n      weatherCode = weatherElement.weatherCode,\n      rainPossibility = weatherElement.rainPossibility,\n      comfortability = weatherElement.comfortability,\n      isLoading = weatherElement.isLoading;\n  return /*#__PURE__*/React.createElement(WeatherCardWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Cog, {\n    onClick: function onClick() {\n      return setCurrentPage('WeatherSetting');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Location, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, cityName), /*#__PURE__*/React.createElement(Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, description, \" \", comfortability), /*#__PURE__*/React.createElement(CurrentWeather, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Temperature, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, Math.round(temperature), \" \", /*#__PURE__*/React.createElement(Celsius, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, \"\\xB0C\")), /*#__PURE__*/React.createElement(WeatherIcon, {\n    currentWeatherCode: weatherCode,\n    moment: moment || 'day',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AirFlow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AirFlowIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), windSpeed, \" m/h\"), /*#__PURE__*/React.createElement(Rain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RainIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), Math.round(rainPossibility), \" %\"), /*#__PURE__*/React.createElement(Refresh, {\n    onClick: fetchData,\n    isLoading: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593\\uFF1A\", new Intl.DateTimeFormat('zh-TW', {\n    hour: 'numeric',\n    minute: 'numeric'\n  }).format(new Date(observationTime)), ' ', isLoading ? /*#__PURE__*/React.createElement(LoadingIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(RefreshIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 40\n    }\n  })));\n};\n\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/user/khalil-weather/realtime-weather-app/src/WeatherCard.js"],"names":["React","styled","WeatherIcon","WeatherCardWrapper","div","theme","boxShadow","foregroundColor","Location","titleColor","Description","textColor","CurrentWeather","Temperature","temperatureColor","Celsius","AirFlow","Rain","Refresh","isLoading","Cog","CogIcon","WeatherCard","props","weatherElement","moment","fetchData","setCurrentPage","cityName","observationTime","temperature","windSpeed","description","weatherCode","rainPossibility","comfortability","Math","round","Intl","DateTimeFormat","hour","minute","format","Date"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport WeatherIcon from './WeatherIcon.js';\nimport { ReactComponent as AirFlowIcon } from './images/airFlow.svg';\nimport { ReactComponent as RainIcon } from './images/rain.svg';\nimport { ReactComponent as RefreshIcon } from './images/refresh.svg';\nimport { ReactComponent as LoadingIcon } from './images/loading.svg';\nimport { ReactComponent as CogIcon } from './images/cog.svg';\n\nconst WeatherCardWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  background-color: ${({ theme }) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\n\nconst Location = styled.div`\n  font-size: 28px;\n  color: ${({ theme }) => theme.titleColor};\n  margin-bottom: 20px;\n`;\n\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 30px;\n`;\n\nconst CurrentWeather = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst Temperature = styled.div`\n  color: ${({ theme }) => theme.temperatureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n`;\n\nconst Celsius = styled.div`\n  font-weight: normal;\n  font-size: 42px;\n`;\n\nconst AirFlow = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 20px;\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Rain = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Refresh = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({ theme }) => theme.textColor};\n\n  svg {\n    margin-left: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n    animation: rotate infinite 1.5s linear;\n    animation-duration: ${({ isLoading }) => (isLoading ? '1.5s' : '0s')};\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nconst Cog = styled(CogIcon)`\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n`;\n\nconst WeatherCard = (props) => {\n  const { weatherElement, moment, fetchData, setCurrentPage, cityName } = props;\n  const {\n    observationTime,\n    temperature,\n    windSpeed,\n    description,\n    weatherCode,\n    rainPossibility,\n    comfortability,\n    isLoading,\n  } = weatherElement;\n\n  return (\n    <WeatherCardWrapper>\n      <Cog onClick={() => setCurrentPage('WeatherSetting')} />\n      <Location>{cityName}</Location>\n      <Description>\n        {description} {comfortability}\n      </Description>\n      <CurrentWeather>\n        <Temperature>\n          {Math.round(temperature)} <Celsius>°C</Celsius>\n        </Temperature>\n        <WeatherIcon\n          currentWeatherCode={weatherCode}\n          moment={moment || 'day'}\n        />\n      </CurrentWeather>\n      <AirFlow>\n        <AirFlowIcon />\n        {windSpeed} m/h\n      </AirFlow>\n      <Rain>\n        <RainIcon />\n        {Math.round(rainPossibility)} %\n      </Rain>\n      <Refresh onClick={fetchData} isLoading={isLoading}>\n        最後觀測時間：\n        {new Intl.DateTimeFormat('zh-TW', {\n          hour: 'numeric',\n          minute: 'numeric',\n        }).format(new Date(observationTime))}{' '}\n        {isLoading ? <LoadingIcon /> : <RefreshIcon />}\n      </Refresh>\n    </WeatherCardWrapper>\n  );\n};\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}