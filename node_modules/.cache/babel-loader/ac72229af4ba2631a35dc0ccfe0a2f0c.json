{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\khalil-weather\\\\realtime-weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\user\\\\khalil-weather\\\\realtime-weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\khalil-weather\\\\realtime-weather-app\\\\src\\\\WeatherIcon.js\",\n    _templateObject,\n    _this = this;\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ReactComponent as DayThunderstorm } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-thunderstorm.svg\";\nimport { ReactComponent as DayClear } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-clear.svg\";\nimport { ReactComponent as DayCloudyFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy-fog.svg\";\nimport { ReactComponent as DayCloudy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy.svg\";\nimport { ReactComponent as DayFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-fog.svg\";\nimport { ReactComponent as DayPartiallyClearWithRain } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-partially-clear-with-rain.svg\";\nimport { ReactComponent as DaySnowing } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-snowing.svg\";\nimport { ReactComponent as NightThunderstorm } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-thunderstorm.svg\";\nimport { ReactComponent as NightClear } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-clear.svg\";\nimport { ReactComponent as NightCloudyFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-cloudy-fog.svg\";\nimport { ReactComponent as NightCloudy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-cloudy.svg\";\nimport { ReactComponent as NightFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-fog.svg\";\nimport { ReactComponent as NightPartiallyClearWithRain } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-partially-clear-with-rain.svg\";\nimport { ReactComponent as NightSnowing } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-snowing.svg\";\nvar weatherTypes = {\n  isThunderstorm: [15, 16, 17, 18, 21, 22, 33, 34, 35, 36, 41],\n  isClear: [1],\n  isCloudyFog: [25, 26, 27, 28],\n  isCloudy: [2, 3, 4, 5, 6, 7],\n  isFog: [24],\n  isPartiallyClearWithRain: [8, 9, 10, 11, 12, 13, 14, 19, 20, 29, 30, 31, 32, 38, 39],\n  isSnowing: [23, 37, 42]\n};\nvar weatherIcons = {\n  day: {\n    isThunderstorm: /*#__PURE__*/React.createElement(DayThunderstorm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }),\n    isClear: /*#__PURE__*/React.createElement(DayClear, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    }),\n    isCloudyFog: /*#__PURE__*/React.createElement(DayCloudyFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }\n    }),\n    isCloudy: /*#__PURE__*/React.createElement(DayCloudy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }),\n    isFog: /*#__PURE__*/React.createElement(DayFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }),\n    isPartiallyClearWithRain: /*#__PURE__*/React.createElement(DayPartiallyClearWithRain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 31\n      }\n    }),\n    isSnowing: /*#__PURE__*/React.createElement(DaySnowing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    })\n  },\n  night: {\n    isThunderstorm: /*#__PURE__*/React.createElement(NightThunderstorm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }),\n    isClear: /*#__PURE__*/React.createElement(NightClear, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }),\n    isCloudyFog: /*#__PURE__*/React.createElement(NightCloudyFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }\n    }),\n    isCloudy: /*#__PURE__*/React.createElement(NightCloudy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }),\n    isFog: /*#__PURE__*/React.createElement(NightFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }),\n    isPartiallyClearWithRain: /*#__PURE__*/React.createElement(NightPartiallyClearWithRain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 31\n      }\n    }),\n    isSnowing: /*#__PURE__*/React.createElement(NightSnowing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    })\n  }\n};\nvar IconContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  flex-basis: 30%;\\n\\n  svg {\\n    max-height: 110px;\\n  }\\n\"])));\n\nvar weatherCode2Type = function weatherCode2Type(weatherCode) {\n  return Object.entries(weatherTypes).reduce(function (currentWeatherType, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        weatherType = _ref2[0],\n        weatherCodes = _ref2[1];\n\n    return weatherCodes.includes(Number(weatherCode)) ? weatherType : currentWeatherType;\n  }, '');\n};\n\nvar WeatherIcon = function WeatherIcon(_ref3) {\n  var currentWeatherCode = _ref3.currentWeatherCode,\n      moment = _ref3.moment;\n\n  var _useState = useState('isClear'),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentWeatherIcon = _useState2[0],\n      setCurrentWeatherIcon = _useState2[1];\n\n  var theWeatherIcon = useMemo(function () {\n    return weatherCode2Type(currentWeatherCode);\n  }, [currentWeatherCode]);\n  useEffect(function () {\n    setCurrentWeatherIcon(theWeatherIcon);\n  }, [theWeatherIcon]);\n  return /*#__PURE__*/React.createElement(IconContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, weatherIcons[moment][currentWeatherIcon]);\n};\n\nexport default WeatherIcon;","map":{"version":3,"sources":["C:/Users/user/khalil-weather/realtime-weather-app/src/WeatherIcon.js"],"names":["React","useState","useEffect","useMemo","styled","weatherTypes","isThunderstorm","isClear","isCloudyFog","isCloudy","isFog","isPartiallyClearWithRain","isSnowing","weatherIcons","day","night","IconContainer","div","weatherCode2Type","weatherCode","Object","entries","reduce","currentWeatherType","weatherType","weatherCodes","includes","Number","WeatherIcon","currentWeatherCode","moment","currentWeatherIcon","setCurrentWeatherIcon","theWeatherIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ReactComponent as DayThunderstorm } from './images/day-thunderstorm.svg';\nimport { ReactComponent as DayClear } from './images/day-clear.svg';\nimport { ReactComponent as DayCloudyFog } from './images/day-cloudy-fog.svg';\nimport { ReactComponent as DayCloudy } from './images/day-cloudy.svg';\nimport { ReactComponent as DayFog } from './images/day-fog.svg';\nimport { ReactComponent as DayPartiallyClearWithRain } from './images/day-partially-clear-with-rain.svg';\nimport { ReactComponent as DaySnowing } from './images/day-snowing.svg';\nimport { ReactComponent as NightThunderstorm } from './images/night-thunderstorm.svg';\nimport { ReactComponent as NightClear } from './images/night-clear.svg';\nimport { ReactComponent as NightCloudyFog } from './images/night-cloudy-fog.svg';\nimport { ReactComponent as NightCloudy } from './images/night-cloudy.svg';\nimport { ReactComponent as NightFog } from './images/night-fog.svg';\nimport { ReactComponent as NightPartiallyClearWithRain } from './images/night-partially-clear-with-rain.svg';\nimport { ReactComponent as NightSnowing } from './images/night-snowing.svg';\n\nconst weatherTypes = {\n  isThunderstorm: [15, 16, 17, 18, 21, 22, 33, 34, 35, 36, 41],\n  isClear: [1],\n  isCloudyFog: [25, 26, 27, 28],\n  isCloudy: [2, 3, 4, 5, 6, 7],\n  isFog: [24],\n  isPartiallyClearWithRain: [\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    19,\n    20,\n    29,\n    30,\n    31,\n    32,\n    38,\n    39,\n  ],\n  isSnowing: [23, 37, 42],\n};\n\nconst weatherIcons = {\n  day: {\n    isThunderstorm: <DayThunderstorm />,\n    isClear: <DayClear />,\n    isCloudyFog: <DayCloudyFog />,\n    isCloudy: <DayCloudy />,\n    isFog: <DayFog />,\n    isPartiallyClearWithRain: <DayPartiallyClearWithRain />,\n    isSnowing: <DaySnowing />,\n  },\n  night: {\n    isThunderstorm: <NightThunderstorm />,\n    isClear: <NightClear />,\n    isCloudyFog: <NightCloudyFog />,\n    isCloudy: <NightCloudy />,\n    isFog: <NightFog />,\n    isPartiallyClearWithRain: <NightPartiallyClearWithRain />,\n    isSnowing: <NightSnowing />,\n  },\n};\n\nconst IconContainer = styled.div`\n  flex-basis: 30%;\n\n  svg {\n    max-height: 110px;\n  }\n`;\n\nconst weatherCode2Type = weatherCode =>\n  Object.entries(weatherTypes).reduce(\n    (currentWeatherType, [weatherType, weatherCodes]) =>\n      weatherCodes.includes(Number(weatherCode))\n        ? weatherType\n        : currentWeatherType,\n    '',\n  );\n\nconst WeatherIcon = ({ currentWeatherCode, moment }) => {\n  const [currentWeatherIcon, setCurrentWeatherIcon] = useState('isClear');\n\n  const theWeatherIcon = useMemo(() => weatherCode2Type(currentWeatherCode), [\n    currentWeatherCode,\n  ]);\n\n  useEffect(() => {\n    setCurrentWeatherIcon(theWeatherIcon);\n  }, [theWeatherIcon]);\n\n  return (\n    <IconContainer>{weatherIcons[moment][currentWeatherIcon]}</IconContainer>\n  );\n};\n\nexport default WeatherIcon;\n"]},"metadata":{},"sourceType":"module"}