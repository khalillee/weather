{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\khalil-weather\\\\realtime-weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\user\\\\khalil-weather\\\\realtime-weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\khalil-weather\\\\realtime-weather-app\\\\src\\\\WeatherSetting.js\";\n\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { availableLocations } from './utils';\nvar WeatherSettingWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n  min-width: 360px;\\n  box-shadow: \", \";\\n  background-color: \", \";\\n  box-sizing: border-box;\\n  padding: 20px;\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.boxShadow;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.foregroundColor;\n});\nvar Title = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-size: 28px;\\n  color: \", \";\\n  margin-bottom: 30px;\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.titleColor;\n});\nvar StyledLabel = styled.label(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  display: block;\\n  font-size: 16px;\\n  color: \", \";\\n  margin-bottom: 15px;\\n\"])), function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.textColor;\n});\nvar StyledInputList = styled.input(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  display: block;\\n  box-sizing: border-box;\\n  background: transparent;\\n  border: 1px solid \", \";\\n  outline: none;\\n  width: 100%;\\n  max-width: 100%;\\n  color: \", \";\\n  font-size: 16px;\\n  padding: 7px 10px;\\n  margin-bottom: 40px;\\n\"])), function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.textColor;\n}, function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.textColor;\n});\nvar ButtonGroup = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n\\n  > button {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    white-space: nowrap;\\n    user-select: none;\\n    margin: 0;\\n    letter-spacing: 0.3px;\\n    line-height: 1;\\n    cursor: pointer;\\n    overflow: visible;\\n    text-transform: none;\\n    border: 1px solid transparent;\\n    background-color: transparent;\\n    height: 35px;\\n    width: 80px;\\n    border-radius: 5px;\\n\\n    &:focus,\\n    &.focus {\\n      outline: 0;\\n      box-shadow: none;\\n    }\\n\\n    &::-moz-focus-inner {\\n      padding: 0;\\n      border-style: none;\\n    }\\n  }\\n\"])));\nvar Back = styled.button(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  && {\\n    color: \", \";\\n    border-color: \", \";\\n  }\\n\"])), function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.textColor;\n}, function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.textColor;\n});\nvar Save = styled.button(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  && {\\n    color: white;\\n    background-color: #40a9f3;\\n  }\\n\"])));\nvar locations = availableLocations.map(function (location) {\n  return location.cityName;\n});\n\nvar WeatherSetting = function WeatherSetting(_ref9) {\n  var setCurrentPage = _ref9.setCurrentPage,\n      cityName = _ref9.cityName,\n      setCurrentCity = _ref9.setCurrentCity;\n\n  var _useState = useState(cityName),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationName = _useState2[0],\n      setLocationName = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    setLocationName(e.target.value);\n  };\n\n  var handleSave = function handleSave() {\n    if (locations.includes(locationName)) {\n      // TODO: 儲存地區資訊...\n      console.log(\"\\u5132\\u5B58\\u7684\\u5730\\u5340\\u8CC7\\u8A0A\\u70BA\\uFF1A\".concat(locationName));\n      setCurrentPage('WeatherCard');\n      setCurrentCity(locationName);\n    } else {\n      alert(\"\\u5132\\u5B58\\u5931\\u6557\\uFF1A\\u60A8\\u8F38\\u5165\\u7684 \".concat(locationName, \" \\u4E26\\u975E\\u6709\\u6548\\u7684\\u5730\\u5340\"));\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(WeatherSettingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"\\u8A2D\\u5B9A\"), /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: \"location\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"\\u5730\\u5340\"), /*#__PURE__*/React.createElement(StyledInputList, {\n    list: \"location-list\",\n    id: \"location\",\n    name: \"location\",\n    onChange: handleChange,\n    value: locationName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"location-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, locations.map(function (location) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: location,\n      key: location,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    });\n  })), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Back, {\n    onClick: function onClick() {\n      return setCurrentPage('WeatherCard');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"\\u8FD4\\u56DE\"), /*#__PURE__*/React.createElement(Save, {\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"\\u5132\\u5B58\")));\n};\n\nexport default WeatherSetting;","map":{"version":3,"sources":["C:/Users/user/khalil-weather/realtime-weather-app/src/WeatherSetting.js"],"names":["React","useState","styled","availableLocations","WeatherSettingWrapper","div","theme","boxShadow","foregroundColor","Title","titleColor","StyledLabel","label","textColor","StyledInputList","input","ButtonGroup","Back","button","Save","locations","map","location","cityName","WeatherSetting","setCurrentPage","setCurrentCity","locationName","setLocationName","handleChange","e","target","value","handleSave","includes","console","log","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { availableLocations } from './utils';\n\nconst WeatherSettingWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  background-color: ${({ theme }) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  font-size: 28px;\n  color: ${({ theme }) => theme.titleColor};\n  margin-bottom: 30px;\n`;\n\nconst StyledLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 15px;\n`;\n\nconst StyledInputList = styled.input`\n  display: block;\n  box-sizing: border-box;\n  background: transparent;\n  border: 1px solid ${({ theme }) => theme.textColor};\n  outline: none;\n  width: 100%;\n  max-width: 100%;\n  color: ${({ theme }) => theme.textColor};\n  font-size: 16px;\n  padding: 7px 10px;\n  margin-bottom: 40px;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    white-space: nowrap;\n    user-select: none;\n    margin: 0;\n    letter-spacing: 0.3px;\n    line-height: 1;\n    cursor: pointer;\n    overflow: visible;\n    text-transform: none;\n    border: 1px solid transparent;\n    background-color: transparent;\n    height: 35px;\n    width: 80px;\n    border-radius: 5px;\n\n    &:focus,\n    &.focus {\n      outline: 0;\n      box-shadow: none;\n    }\n\n    &::-moz-focus-inner {\n      padding: 0;\n      border-style: none;\n    }\n  }\n`;\n\nconst Back = styled.button`\n  && {\n    color: ${({ theme }) => theme.textColor};\n    border-color: ${({ theme }) => theme.textColor};\n  }\n`;\n\nconst Save = styled.button`\n  && {\n    color: white;\n    background-color: #40a9f3;\n  }\n`;\n\nconst locations = availableLocations.map((location) => location.cityName);\n\nconst WeatherSetting = ({ setCurrentPage, cityName, setCurrentCity }) => {\n  const [locationName, setLocationName] = useState(cityName);\n\n  const handleChange = (e) => {\n    setLocationName(e.target.value);\n  };\n\n  const handleSave = () => {\n    if (locations.includes(locationName)) {\n      // TODO: 儲存地區資訊...\n      console.log(`儲存的地區資訊為：${locationName}`);\n      setCurrentPage('WeatherCard');\n      setCurrentCity(locationName);\n    } else {\n      alert(`儲存失敗：您輸入的 ${locationName} 並非有效的地區`);\n      return;\n    }\n  };\n\n  return (\n    <WeatherSettingWrapper>\n      <Title>設定</Title>\n      <StyledLabel htmlFor=\"location\">地區</StyledLabel>\n      <StyledInputList\n        list=\"location-list\"\n        id=\"location\"\n        name=\"location\"\n        onChange={handleChange}\n        value={locationName}\n      />\n\n      <datalist id=\"location-list\">\n        {locations.map((location) => (\n          <option value={location} key={location} />\n        ))}\n      </datalist>\n\n      <ButtonGroup>\n        <Back onClick={() => setCurrentPage('WeatherCard')}>返回</Back>\n        <Save onClick={handleSave}>儲存</Save>\n      </ButtonGroup>\n    </WeatherSettingWrapper>\n  );\n};\n\nexport default WeatherSetting;\n"]},"metadata":{},"sourceType":"module"}